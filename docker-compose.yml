version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: lespatounes-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: lespatounes
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - lespatounes-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS API
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: lespatounes-api
    restart: unless-stopped
    environment:
      DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/lespatounes?schema=public"
      NODE_ENV: production
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - lespatounes-network
    volumes:
      - ./api/prisma:/app/prisma

  # React App
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: lespatounes-app
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - api
    networks:
      - lespatounes-network

volumes:
  postgres_data:
    driver: local

networks:
  lespatounes-network:
    driver: bridge
